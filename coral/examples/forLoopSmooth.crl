# coral save script
version = 0.1

def runScript(topNode = 'root'):
    executeCommand('CreateNode', className = 'DrawGeo', name = 'DrawGeo', specializationPreset = 'none', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.DrawGeo.smooth', value = 'True')
    executeCommand('SetAttributeValue', attribute = topNode + '.DrawGeo.flat', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.DrawGeo.wireframe', value = 'True')
    executeCommand('SetAttributeValue', attribute = topNode + '.DrawGeo.points', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.DrawGeo.normals', value = 'False')
    
    executeCommand('CreateNode', className = 'GeoCube', name = 'GeoCube', specializationPreset = 'none', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.width', value = '[10] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.height', value = '[10] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.depth', value = '[10] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.widthSubdivisions', value = '[5] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.heightSubdivisions', value = '[5] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.GeoCube.depthSubdivisions', value = '[5] 1')
    
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'Smooth', specializationPreset = 'none', parentNode = topNode)
    executeCommand('CreateAttribute', name = '2:geo', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth', input = True, specializationOverride = 'Geo')
    executeCommand('CreateAttribute', name = '1:iterations', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth', input = True, specializationOverride = 'Int')
    executeCommand('CreateAttribute', name = 'output', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth', output = True)
    
    executeCommand('CreateNode', className = 'ForLoop', name = 'ForLoop', specializationPreset = 'none', parentNode = topNode + '.Smooth')
    executeCommand('CreateAttribute', name = 'input', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth.ForLoop', input = True, specializationOverride = 'IntArray')
    executeCommand('CreateAttribute', name = 'input1', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth.ForLoop', input = True)
    executeCommand('CreateAttribute', name = 'input2', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth.ForLoop', input = True, specializationOverride = 'Geo')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.ForLoop._currentIndex', value = '[10] 1')
    
    executeCommand('CreateNode', className = 'GetSimulationStep', name = 'GetSimulationStep', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop')
    
    executeCommand('CreateNode', className = 'SetSimulationStep', name = 'SetSimulationStep', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop')
    
    executeCommand('CreateNode', className = 'ForLoop', name = 'ForLoop', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop')
    executeCommand('CreateAttribute', name = 'input', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth.ForLoop.ForLoop', input = True, specializationOverride = 'Geo')
    executeCommand('CreateAttribute', name = 'input1', className = 'PassThroughAttribute', parentNode = topNode + '.Smooth.ForLoop.ForLoop', input = True, specializationOverride = 'Vec3Array')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.ForLoop.ForLoop._currentIndex', value = '[151] 1')
    
    executeCommand('CreateNode', className = 'GeoNeighbourPoints', name = 'GeoNeighbourPoints', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'GetArrayElement', name = 'GetArrayElement', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'ArraySize', name = 'ArraySize', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'Div', name = 'Div', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add1', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'Int', name = 'one', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.ForLoop.ForLoop.one.out', value = '[1] 1')
    
    executeCommand('CreateNode', className = 'NumericIterator', name = 'NumericIterator', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('CreateNode', className = 'GetArrayElement', name = 'GetArrayElement1', specializationPreset = 'none', parentNode = topNode + '.Smooth.ForLoop.ForLoop')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.input', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GeoNeighbourPoints.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop._currentIndex', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GeoNeighbourPoints.vertex')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.input1', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement.array')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop._currentIndex', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement.index')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement.element', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement1.element', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.GeoNeighbourPoints.vertices', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.ArraySize.array')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add.out', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Div.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add1.out', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Div.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.ArraySize.size', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add1.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.one.out', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.Add1.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop._currentIndex', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.NumericIterator.index')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.Div.out', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.NumericIterator.element')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.NumericIterator.array', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.out')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.input1', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement1.array')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.GeoNeighbourPoints.vertices', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement1.index')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.input1', destinationAttribute = topNode + '.Smooth.ForLoop.GetSimulationStep.source')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop._currentIndex', destinationAttribute = topNode + '.Smooth.ForLoop.GetSimulationStep.step')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.GetSimulationStep.data', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.input1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.input1', destinationAttribute = topNode + '.Smooth.ForLoop.SetSimulationStep.source')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.out', destinationAttribute = topNode + '.Smooth.ForLoop.SetSimulationStep.data')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.SetSimulationStep.result', destinationAttribute = topNode + '.Smooth.ForLoop.out')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.input', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.indexRange')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.input2', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.GetSimulationStep.data', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.input1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.ForLoop.NumericIterator.array', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.out')
    executeCommand('CreateNode', className = 'RangeArray', name = 'RangeArray', specializationPreset = 'none', parentNode = topNode + '.Smooth')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.RangeArray.start', value = '[0] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.RangeArray.end', value = '[10] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.Smooth.RangeArray.steps', value = '[10] 1')
    
    executeCommand('CreateNode', className = 'ArrayIndices', name = 'ArrayIndices', specializationPreset = 'none', parentNode = topNode + '.Smooth')
    
    executeCommand('CreateNode', className = 'GetGeoPoints', name = 'GetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.Smooth')
    
    executeCommand('CreateNode', className = 'SetGeoPoints', name = 'SetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.Smooth')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.RangeArray.array', destinationAttribute = topNode + '.Smooth.ForLoop.indexRange')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ArrayIndices.indices', destinationAttribute = topNode + '.Smooth.ForLoop.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.GetGeoPoints.points', destinationAttribute = topNode + '.Smooth.ForLoop.input1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.2:geo', destinationAttribute = topNode + '.Smooth.ForLoop.input2')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.input2', destinationAttribute = topNode + '.Smooth.ForLoop.ForLoop.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.SetSimulationStep.result', destinationAttribute = topNode + '.Smooth.ForLoop.out')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.1:iterations', destinationAttribute = topNode + '.Smooth.RangeArray.end')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.1:iterations', destinationAttribute = topNode + '.Smooth.RangeArray.steps')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.GetGeoPoints.points', destinationAttribute = topNode + '.Smooth.ArrayIndices.array')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ArrayIndices.indices', destinationAttribute = topNode + '.Smooth.ForLoop.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.2:geo', destinationAttribute = topNode + '.Smooth.GetGeoPoints.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.GetGeoPoints.points', destinationAttribute = topNode + '.Smooth.ForLoop.input1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.2:geo', destinationAttribute = topNode + '.Smooth.SetGeoPoints.inGeo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.ForLoop.out', destinationAttribute = topNode + '.Smooth.SetGeoPoints.points')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.SetGeoPoints.outGeo', destinationAttribute = topNode + '.Smooth.output')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.output', destinationAttribute = topNode + '.DrawGeo.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.GeoCube.out', destinationAttribute = topNode + '.Smooth.2:geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.GeoCube.out', destinationAttribute = topNode + '.Smooth.2:geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.2:geo', destinationAttribute = topNode + '.Smooth.ForLoop.input2')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Smooth.SetGeoPoints.outGeo', destinationAttribute = topNode + '.Smooth.output')
    # nodeEditor save data
    executeCommand('SetNodeUiData', node = topNode, data = {})
    executeCommand('SetNodeUiData', node = topNode + '.DrawGeo', data = {'pos': [372.11111111111177, 251.66666666666697]})
    executeCommand('SetNodeUiData', node = topNode + '.GeoCube', data = {'pos': [-120.65240641711236, 151.5026737967915]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth', data = {'attributes': [{'name': '1:iterations', 'pos': [-18.375, -28.0]}, {'name': '2:geo', 'pos': [-16.144879426129307, 123.17338217338215]}, {'name': 'output', 'pos': [930.44196428571468, 256.57142857142867]}], 'pos': [150.51198721281457, 187.46385422856025]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop', data = {'attributes': [{'name': 'indexRange', 'pos': [0.0, 0.0]}, {'name': 'input', 'pos': [35.0, 320.00000000000028]}, {'name': 'input1', 'pos': [45.0, 229.0]}, {'name': 'input2', 'pos': [56.999999999999964, 466.00000000000006]}, {'name': 'out', 'pos': [1204.4444444444455, 472.88888888888908]}], 'pos': [444.20512820512823, 73.871794871794805]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.GetSimulationStep', data = {'pos': [395.0, 264.00000000000011]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.SetSimulationStep', data = {'pos': [911.66666666666663, 226.0]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop', data = {'attributes': [{'name': 'indexRange', 'pos': [-1.6666666666666572, 5.0]}, {'name': 'input', 'pos': [34.0, 197.33333333333337]}, {'name': 'input1', 'pos': [31.0, 108.66666666666669]}, {'name': 'out', 'pos': [1613.3333333333353, 450.66666666666708]}], 'pos': [600.00000000000045, 381.00000000000023]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.GeoNeighbourPoints', data = {'pos': [325.76190476190487, 222.66666666666674]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement', data = {'pos': [341.14285714285717, 50.428571428571388]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.Add', data = {'pos': [798.75213675213672, 120.76923076923072]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.ArraySize', data = {'pos': [789.16971916971943, 269.67032967032975]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.Div', data = {'pos': [1106.7777777777785, 239.00000000000017]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.Add1', data = {'pos': [957.44444444444457, 327.99999999999994]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.one', data = {'pos': [801.44444444444457, 413.99999999999994]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.NumericIterator', data = {'pos': [1308.4444444444446, 307.99999999999994]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ForLoop.ForLoop.GetArrayElement1', data = {'pos': [526.22222222222263, 149.39682539682531]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.RangeArray', data = {'pos': [214.0, -77.0]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.ArrayIndices', data = {'pos': [189.23076923076923, 70.0]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.GetGeoPoints', data = {'pos': [60.230769230769241, 201.07692307692315]})
    executeCommand('SetNodeUiData', node = topNode + '.Smooth.SetGeoPoints', data = {'pos': [724.28571428571468, 208.57142857142864]})
    
