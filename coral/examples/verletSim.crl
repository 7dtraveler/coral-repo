# coral save script
version = 0.1

def runScript(topNode = 'root'):
    executeCommand('CreateNode', className = 'Vec3', name = 'endPoint', specializationPreset = 'single', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.endPoint.x', value = '[10] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.endPoint.y', value = '[12.7] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.endPoint.z', value = '[0] 3')
    
    executeCommand('CreateNode', className = 'Vec3', name = 'startPoint', specializationPreset = 'single', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.startPoint.x', value = '[0] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.startPoint.y', value = '[13] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.startPoint.z', value = '[0] 3')
    
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'draw', specializationPreset = 'none', parentNode = topNode)
    executeCommand('CreateAttribute', name = 'pointA', className = 'PassThroughAttribute', parentNode = topNode + '.draw', input = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = 'pointB', className = 'PassThroughAttribute', parentNode = topNode + '.draw', input = True, specializationOverride = 'Vec3')
    
    executeCommand('CreateNode', className = 'Sub', name = 'Sub', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'Vec3Length', name = 'Vec3Length', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'Mul', name = 'Mul', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'RangeArray', name = 'RangeArray', specializationPreset = 'none', parentNode = topNode + '.draw')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.RangeArray.start', value = '[0] 3')
    
    executeCommand('CreateNode', className = 'DrawNumeric', name = 'DrawNumeric', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'ConstantArray', name = 'ConstantArray', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'Int', name = 'steps', specializationPreset = 'none', parentNode = topNode + '.draw')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.steps.out', value = '[20] 1')
    
    executeCommand('CreateNode', className = 'Vec3Normalize', name = 'Vec3Normalize', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add', specializationPreset = 'none', parentNode = topNode + '.draw')
    
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'drawSphere', specializationPreset = 'none', parentNode = topNode + '.draw')
    executeCommand('CreateAttribute', name = 'input', className = 'PassThroughAttribute', parentNode = topNode + '.draw.drawSphere', input = True)
    
    executeCommand('CreateNode', className = 'SetGeoPoints', name = 'SetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.draw.drawSphere')
    
    executeCommand('CreateNode', className = 'GeoSphere', name = 'GeoSphere', specializationPreset = 'none', parentNode = topNode + '.draw.drawSphere')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.GeoSphere.radius', value = '[1] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.GeoSphere.rings', value = '[10] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.GeoSphere.sectors', value = '[10] 1')
    
    executeCommand('CreateNode', className = 'GetGeoPoints', name = 'GetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.draw.drawSphere')
    
    executeCommand('CreateNode', className = 'DrawGeo', name = 'DrawGeo', specializationPreset = 'none', parentNode = topNode + '.draw.drawSphere')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.DrawGeo.smooth', value = 'True')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.DrawGeo.flat', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.DrawGeo.wireframe', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.DrawGeo.points', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawSphere.DrawGeo.normals', value = 'False')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add', specializationPreset = 'none', parentNode = topNode + '.draw.drawSphere')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.GeoSphere.out', destinationAttribute = topNode + '.draw.drawSphere.SetGeoPoints.inGeo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.Add.out', destinationAttribute = topNode + '.draw.drawSphere.SetGeoPoints.points')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.GeoSphere.out', destinationAttribute = topNode + '.draw.drawSphere.GetGeoPoints.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.SetGeoPoints.outGeo', destinationAttribute = topNode + '.draw.drawSphere.DrawGeo.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.GetGeoPoints.points', destinationAttribute = topNode + '.draw.drawSphere.Add.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawSphere.input', destinationAttribute = topNode + '.draw.drawSphere.Add.in1')
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'drawCube', specializationPreset = 'none', parentNode = topNode + '.draw')
    executeCommand('CreateAttribute', name = 'input', className = 'PassThroughAttribute', parentNode = topNode + '.draw.drawCube', input = True)
    
    executeCommand('CreateNode', className = 'SetGeoPoints', name = 'SetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.draw.drawCube')
    
    executeCommand('CreateNode', className = 'GetGeoPoints', name = 'GetGeoPoints', specializationPreset = 'none', parentNode = topNode + '.draw.drawCube')
    
    executeCommand('CreateNode', className = 'DrawGeo', name = 'DrawGeo', specializationPreset = 'none', parentNode = topNode + '.draw.drawCube')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.DrawGeo.smooth', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.DrawGeo.flat', value = 'True')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.DrawGeo.wireframe', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.DrawGeo.points', value = 'False')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.DrawGeo.normals', value = 'False')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add', specializationPreset = 'none', parentNode = topNode + '.draw.drawCube')
    
    executeCommand('CreateNode', className = 'GeoCube', name = 'GeoCube', specializationPreset = 'none', parentNode = topNode + '.draw.drawCube')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.width', value = '[1] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.height', value = '[1] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.depth', value = '[1] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.widthSubdivisions', value = '[1] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.heightSubdivisions', value = '[1] 1')
    executeCommand('SetAttributeValue', attribute = topNode + '.draw.drawCube.GeoCube.depthSubdivisions', value = '[1] 1')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.GeoCube.out', destinationAttribute = topNode + '.draw.drawCube.SetGeoPoints.inGeo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.Add.out', destinationAttribute = topNode + '.draw.drawCube.SetGeoPoints.points')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.GeoCube.out', destinationAttribute = topNode + '.draw.drawCube.GetGeoPoints.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.SetGeoPoints.outGeo', destinationAttribute = topNode + '.draw.drawCube.DrawGeo.geo')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.GetGeoPoints.points', destinationAttribute = topNode + '.draw.drawCube.Add.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.drawCube.input', destinationAttribute = topNode + '.draw.drawCube.Add.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointA', destinationAttribute = topNode + '.draw.Sub.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointB', destinationAttribute = topNode + '.draw.Sub.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Sub.out', destinationAttribute = topNode + '.draw.Vec3Length.vector')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.ConstantArray.array', destinationAttribute = topNode + '.draw.Mul.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.RangeArray.array', destinationAttribute = topNode + '.draw.Mul.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Vec3Length.length', destinationAttribute = topNode + '.draw.RangeArray.end')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.steps.out', destinationAttribute = topNode + '.draw.RangeArray.steps')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Add.out', destinationAttribute = topNode + '.draw.DrawNumeric.numeric')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.steps.out', destinationAttribute = topNode + '.draw.ConstantArray.size')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Vec3Normalize.normalized', destinationAttribute = topNode + '.draw.ConstantArray.constant')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Sub.out', destinationAttribute = topNode + '.draw.Vec3Normalize.vector')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.Mul.out', destinationAttribute = topNode + '.draw.Add.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointB', destinationAttribute = topNode + '.draw.Add.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointB', destinationAttribute = topNode + '.draw.drawSphere.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointA', destinationAttribute = topNode + '.draw.drawCube.input')
    executeCommand('CreateNode', className = 'Time', name = 'Time', specializationPreset = 'none', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.Time.framesPerSecond', value = '[24] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.Time.time', value = '[0] 3')
    
    executeCommand('CreateNode', className = 'Vec3', name = 'gravity', specializationPreset = 'single', parentNode = topNode)
    executeCommand('SetAttributeValue', attribute = topNode + '.gravity.x', value = '[0] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.gravity.y', value = '[-0.8] 3')
    executeCommand('SetAttributeValue', attribute = topNode + '.gravity.z', value = '[0] 3')
    
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'verletSim', specializationPreset = 'none', parentNode = topNode)
    executeCommand('CreateAttribute', name = '2:endPoint', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', input = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = '0:time', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', input = True, specializationOverride = 'Float')
    executeCommand('CreateAttribute', name = 'output', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', output = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = '1:startPoint', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', input = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = 'stickLength', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', input = True, specializationOverride = 'Float')
    executeCommand('CreateAttribute', name = '4:gravity', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim', input = True, specializationOverride = 'Vec3')
    
    executeCommand('CreateNode', className = 'SetSimulationStep', name = 'setCurrentStep', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.setCurrentStep.storageKey', value = 'currentStep')
    
    executeCommand('CreateNode', className = 'GetSimulationStep', name = 'getOldStep', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.getOldStep.storageKey', value = 'oldStep')
    
    executeCommand('CreateNode', className = 'SetSimulationStep', name = 'setOldStep', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.setOldStep.storageKey', value = 'oldStep')
    
    executeCommand('CreateNode', className = 'GetSimulationStep', name = 'getCurrentStep', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.getCurrentStep.storageKey', value = 'currentStep')
    
    executeCommand('CreateNode', className = 'ProcessSimulation', name = 'ProcessSimulation', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('CreateAttribute', name = 'data1', className = 'NumericAttribute', parentNode = topNode + '.verletSim.ProcessSimulation', input = True)
    executeCommand('SetupDynamicAttribute', attribute = topNode + '.verletSim.ProcessSimulation.data1', affect = [topNode + '.verletSim.ProcessSimulation.out'], affectedBy = [], allowedSpecialization = ['Int','IntArray','Float','FloatArray','Vec3','Vec3Array','Col4','Col4Array','Quat','QuatArray','Matrix44','Matrix44Array'], specializationLinkedTo = [topNode + '.verletSim.ProcessSimulation.out'], specializationLinkedBy = [])
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.ProcessSimulation.getDataFrom', value = '[{0:"data0",1:"data1",},0]')
    
    executeCommand('CreateNode', className = 'CollapsedNode', name = 'constraintToLength', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    executeCommand('CreateAttribute', name = '2:endPoint', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim.constraintToLength', input = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = 'output', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim.constraintToLength', output = True)
    executeCommand('CreateAttribute', name = '1:startPoint', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim.constraintToLength', input = True, specializationOverride = 'Vec3')
    executeCommand('CreateAttribute', name = '0:length', className = 'PassThroughAttribute', parentNode = topNode + '.verletSim.constraintToLength', input = True, specializationOverride = 'Float')
    
    executeCommand('CreateNode', className = 'Vec3Normalize', name = 'Vec3Normalize', specializationPreset = 'none', parentNode = topNode + '.verletSim.constraintToLength')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add1', specializationPreset = 'none', parentNode = topNode + '.verletSim.constraintToLength')
    
    executeCommand('CreateNode', className = 'Sub', name = 'Sub', specializationPreset = 'none', parentNode = topNode + '.verletSim.constraintToLength')
    
    executeCommand('CreateNode', className = 'Mul', name = 'Mul', specializationPreset = 'none', parentNode = topNode + '.verletSim.constraintToLength')
    executeCommand('SetAttributeValue', attribute = topNode + '.verletSim.constraintToLength.Mul.in1', value = '[10] 3')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.Sub.out', destinationAttribute = topNode + '.verletSim.constraintToLength.Vec3Normalize.vector')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.Mul.out', destinationAttribute = topNode + '.verletSim.constraintToLength.Add1.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.1:startPoint', destinationAttribute = topNode + '.verletSim.constraintToLength.Add1.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.Add1.out', destinationAttribute = topNode + '.verletSim.constraintToLength.output')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.2:endPoint', destinationAttribute = topNode + '.verletSim.constraintToLength.Sub.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.1:startPoint', destinationAttribute = topNode + '.verletSim.constraintToLength.Sub.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.Vec3Normalize.normalized', destinationAttribute = topNode + '.verletSim.constraintToLength.Mul.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.0:length', destinationAttribute = topNode + '.verletSim.constraintToLength.Mul.in1')
    executeCommand('CreateNode', className = 'Add', name = 'Add', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    
    executeCommand('CreateNode', className = 'Add', name = 'Add1', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    
    executeCommand('CreateNode', className = 'Sub', name = 'Sub', specializationPreset = 'none', parentNode = topNode + '.verletSim')
    
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.output', destinationAttribute = topNode + '.verletSim.setCurrentStep.data')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.2:endPoint', destinationAttribute = topNode + '.verletSim.getOldStep.source')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.0:time', destinationAttribute = topNode + '.verletSim.getOldStep.step')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.getCurrentStep.data', destinationAttribute = topNode + '.verletSim.setOldStep.data')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.2:endPoint', destinationAttribute = topNode + '.verletSim.getCurrentStep.source')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.0:time', destinationAttribute = topNode + '.verletSim.getCurrentStep.step')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.setCurrentStep.result', destinationAttribute = topNode + '.verletSim.ProcessSimulation.data0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.setOldStep.result', destinationAttribute = topNode + '.verletSim.ProcessSimulation.data1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.ProcessSimulation.out', destinationAttribute = topNode + '.verletSim.output')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.Add1.out', destinationAttribute = topNode + '.verletSim.constraintToLength.2:endPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.1:startPoint', destinationAttribute = topNode + '.verletSim.constraintToLength.1:startPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.stickLength', destinationAttribute = topNode + '.verletSim.constraintToLength.0:length')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.constraintToLength.Add1.out', destinationAttribute = topNode + '.verletSim.constraintToLength.output')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.getCurrentStep.data', destinationAttribute = topNode + '.verletSim.Add.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.Sub.out', destinationAttribute = topNode + '.verletSim.Add.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.Add.out', destinationAttribute = topNode + '.verletSim.Add1.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.4:gravity', destinationAttribute = topNode + '.verletSim.Add1.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.Add1.out', destinationAttribute = topNode + '.verletSim.constraintToLength.2:endPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.getCurrentStep.data', destinationAttribute = topNode + '.verletSim.Sub.in0')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.getOldStep.data', destinationAttribute = topNode + '.verletSim.Sub.in1')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.endPoint.vector', destinationAttribute = topNode + '.verletSim.2:endPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.startPoint.vector', destinationAttribute = topNode + '.draw.pointA')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.startPoint.vector', destinationAttribute = topNode + '.verletSim.1:startPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.startPoint.vector', destinationAttribute = topNode + '.draw.pointA')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointA', destinationAttribute = topNode + '.draw.drawCube.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.output', destinationAttribute = topNode + '.draw.pointB')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.draw.pointB', destinationAttribute = topNode + '.draw.drawSphere.input')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Time.time', destinationAttribute = topNode + '.verletSim.0:time')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.gravity.vector', destinationAttribute = topNode + '.verletSim.4:gravity')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.endPoint.vector', destinationAttribute = topNode + '.verletSim.2:endPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.Time.time', destinationAttribute = topNode + '.verletSim.0:time')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.startPoint.vector', destinationAttribute = topNode + '.verletSim.1:startPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.1:startPoint', destinationAttribute = topNode + '.verletSim.constraintToLength.1:startPoint')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.stickLength', destinationAttribute = topNode + '.verletSim.constraintToLength.0:length')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.gravity.vector', destinationAttribute = topNode + '.verletSim.4:gravity')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.ProcessSimulation.out', destinationAttribute = topNode + '.verletSim.output')
    executeCommand('ConnectAttributes', sourceAttribute = topNode + '.verletSim.output', destinationAttribute = topNode + '.draw.pointB')
    # nodeEditor save data
    executeCommand('SetNodeUiData', node = topNode, data = {})
    executeCommand('SetNodeUiData', node = topNode + '.endPoint', data = {'pos': [-982.15584415584476, 788.56998556998496]})
    executeCommand('SetNodeUiData', node = topNode + '.startPoint', data = {'pos': [-986.57261469180958, 670.21295216651288]})
    executeCommand('SetNodeUiData', node = topNode + '.draw', data = {'attributes': [{'name': 'pointA', 'pos': [-193.00000000000006, -52.999999999999972]}, {'name': 'pointB', 'pos': [-166.0, 114.3859649122808]}], 'pos': [-425.25531778163361, 647.81476126213022]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.Sub', data = {'pos': [139.99999999999997, 31.999999999999993]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.Vec3Length', data = {'pos': [261.42857142857139, 244.47619047619051]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.Mul', data = {'pos': [657.33333333333303, 110.66666666666674]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.RangeArray', data = {'pos': [489.33333333333314, 226.66666666666652]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.DrawNumeric', data = {'pos': [1048.2506265664158, 204.79197994987464]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.ConstantArray', data = {'pos': [501.42857142857156, -19.999999999999986]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.steps', data = {'pos': [53.428571428571573, -183.71428571428578]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.Vec3Normalize', data = {'pos': [248.57142857142867, -28.571428571428555]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.Add', data = {'pos': [790.00000000000023, 247.14285714285722]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere', data = {'attributes': [{'name': 'input', 'pos': [-3.71875, 83.0]}], 'pos': [88.180451127819538, 271.68421052631584]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere.SetGeoPoints', data = {'pos': [295.71428571428589, -131.42857142857147]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere.GeoSphere', data = {'pos': [-210.28571428571433, -208.14285714285711]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere.GetGeoPoints', data = {'pos': [18.0, -67.0]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere.DrawGeo', data = {'pos': [488.71428571428589, -54.285714285714292]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawSphere.Add', data = {'pos': [150.0, 51.0]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube', data = {'attributes': [{'name': 'input', 'pos': [-3.71875, 83.0]}], 'pos': [126.18045112781959, 487.68421052631606]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube.SetGeoPoints', data = {'pos': [295.71428571428589, -131.42857142857147]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube.GetGeoPoints', data = {'pos': [18.0, -67.0]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube.DrawGeo', data = {'pos': [488.71428571428589, -54.285714285714292]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube.Add', data = {'pos': [150.0, 51.0]})
    executeCommand('SetNodeUiData', node = topNode + '.draw.drawCube.GeoCube', data = {'pos': [-263.57142857142856, -452.57142857142873]})
    executeCommand('SetNodeUiData', node = topNode + '.Time', data = {'pos': [-992.60439560439568, 530.35164835164869]})
    executeCommand('SetNodeUiData', node = topNode + '.gravity', data = {'pos': [-976.71428571428532, 923.04761904761995]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim', data = {'attributes': [{'name': '0:time', 'pos': [-733.18452380952442, 942.90476190476238]}, {'name': '1:startPoint', 'pos': [144.55672304346848, 568.65314303859213]}, {'name': '2:endPoint', 'pos': [-738.52827380952419, 744.30735930735977]}, {'name': '4:gravity', 'pos': [98.519576012223212, 925.03794244970766]}, {'name': 'stickLength', 'pos': [137.91806758128368, 458.11532791254194]}, {'name': 'output', 'pos': [1149.077380952381, 788.47619047619048]}], 'pos': [-636.76658410854407, 748.08526973542484]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.setCurrentStep', data = {'pos': [642.38095238095275, 721.66666666666697]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.getOldStep', data = {'pos': [-447.66666666666697, 882.00000000000045]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.setOldStep', data = {'pos': [592.61904761904793, 894.04761904761972]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.getCurrentStep', data = {'pos': [-421.00000000000017, 653.3333333333336]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.ProcessSimulation', data = {'pos': [872.38095238095275, 801.90476190476204]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.constraintToLength', data = {'attributes': [{'name': '0:length', 'pos': [-611.0, 610.0]}, {'name': '1:startPoint', 'pos': [-673.23214285714334, 272.85714285714278]}, {'name': '2:endPoint', 'pos': [-654.7901785714289, 457.71428571428601]}, {'name': 'output', 'pos': [141.62053571428561, 624.57142857142912]}], 'pos': [410.99894993422481, 608.58591614783586]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.constraintToLength.Vec3Normalize', data = {'pos': [-361.42857142857179, 405.71428571428555]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.constraintToLength.Add1', data = {'pos': [-33.285714285714391, 576.57142857142912]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.constraintToLength.Sub', data = {'pos': [-486.85714285714334, 324.85714285714278]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.constraintToLength.Mul', data = {'pos': [-165.71428571428612, 502.85714285714289]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.Add', data = {'pos': [10.0, 761.42857142857167]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.Add1', data = {'pos': [246.7647058823531, 737.84313725490233]})
    executeCommand('SetNodeUiData', node = topNode + '.verletSim.Sub', data = {'pos': [-171.42857142857144, 878.57142857142912]})
    
